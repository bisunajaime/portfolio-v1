[{"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/index.js":"1","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/reportWebVitals.js":"2","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/App.js":"3","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/about/AboutMe.js":"4","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/navigation/NavigationBar.js":"5","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/projects/Projects.js":"6","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/contact/Contact.js":"7","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/techstack/TechStack.js":"8","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/events/attended/AttendedEvents.js":"9","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/events/hosted/HostedEvents.js":"10","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/organizations/Organizations.js":"11"},{"size":287,"mtime":1607051963370,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607050809479,"results":"14","hashOfConfig":"13"},{"size":788,"mtime":1608196697108,"results":"15","hashOfConfig":"13"},{"size":1547,"mtime":1610349366480,"results":"16","hashOfConfig":"13"},{"size":1785,"mtime":1607126146939,"results":"17","hashOfConfig":"13"},{"size":5760,"mtime":1609996803636,"results":"18","hashOfConfig":"13"},{"size":1245,"mtime":1610350612116,"results":"19","hashOfConfig":"13"},{"size":4242,"mtime":1610034046329,"results":"20","hashOfConfig":"13"},{"size":920,"mtime":1607101041464,"results":"21","hashOfConfig":"13"},{"size":924,"mtime":1607101038348,"results":"22","hashOfConfig":"13"},{"size":821,"mtime":1610032914876,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1k9f2bm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/index.js",[],["51","52"],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/reportWebVitals.js",[],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/App.js",[],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/about/AboutMe.js",["53","54","55","56","57","58","59","60"],"import { faGit, faGithub, faGithubSquare, faLinkedin, faLinkedinIn, faTwitter, faTwitterSquare } from \"@fortawesome/free-brands-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\n\nconst AboutMe = () => {\n    return (\n        <section id=\"about\">\n            <div className=\"content\">\n                <h1>Hello there,<br />I'm Jaime Bisuña.</h1>\n                {/* <h1>Hello there,<br />I'm <b className=\"purple-text\">Jaime Bisuña</b>.</h1> */}\n                <small>SOFTWARE DEVELOPER</small>\n                {/* <span>Welcome to my portoflio!</span> */}\n                <span>\n                    I have a passion for developing mobile/web applications and believe that time is something that must not be wasted, but must be used wisely.\n                </span>\n                <div className=\"links\">\n                    <a href=\"https://www.linkedin.com/in/jose-jaime-bisu%C3%B1a-29733a202/\" target=\"_blank\"><FontAwesomeIcon icon={faLinkedin} className=\"icon\" color=\"white\" /></a>\n                    <a href=\"https://github.com/jose-bamboo\" target=\"_blank\"><FontAwesomeIcon icon={faGithubSquare} className=\"icon\" color=\"white\" /></a>\n                    <a href=\"https://twitter.com/lamboo_cetteuce\" target=\"_blank\"><FontAwesomeIcon icon={faTwitterSquare} className=\"icon\" color=\"white\" /></a>\n                </div>\n                <a href={process.env.PUBLIC_URL + \"/files/JoseJaimeBisunaResume.pdf\"} target=\"_blank\">Find my resume here.</a>\n            </div>\n        </section>\n    )\n}\n\nexport default AboutMe","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/navigation/NavigationBar.js",["61","62"],"import { useState, useEffect, Fragment } from 'react'\n\nconst NavigationBar = () => {\n    const [selected, setSelected] = useState([\n        {\n            'label': 'About',\n            'active': true,\n            'tag': '#about'\n        },\n        {\n            'label': 'Projects',\n            'active': false,\n            'tag': '#projects'\n        },\n        {\n            'label': 'Techstack',\n            'active': false,\n            'tag': '#techstack'\n        },\n        {\n            'label': 'Events',\n            'active': false,\n            'tag': '#events'\n        },\n        {\n            'label': 'Orgs',\n            'active': false,\n            'tag': '#organizations'\n        },\n        {\n            'label': 'Contact',\n            'active': false,\n            'tag': '#contact'\n        },\n    ])\n    const [selectedIndex, setSelectedIndex] = useState(0)\n\n    useEffect(() => {\n        changeActive(selectedIndex)\n    }, [selected])\n\n    const changeActive = (index) => {\n        setSelectedIndex(index)\n        let newSelected = selected\n        selected.forEach((e, i) => {\n            if (i == index) {\n                newSelected[index].active = true\n            } else {\n                newSelected[i].active = false\n            }\n        })\n        setSelected(newSelected)\n    }\n\n    return (\n        <Fragment />\n        // <nav id=\"nav\">\n        //     <div className=\"logo\"></div>\n        //     <div className=\"nav_items\">\n        //         <ul>\n        //             {selected.map((e, i) => <li onClick={() => changeActive(i)}>\n        //                 <a className={e.active ? \"active\" : \"\"} href={e.tag}>{e.label}</a>\n        //             </li>)}\n        //         </ul>\n        //     </div>\n        // </nav>\n    )\n}\n\nexport default NavigationBar","/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/projects/Projects.js",["63","64","65","66","67","68","69","70"],"import { useRef, useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport data from '../../content.json'\nimport ImagesLoaded from 'react-images-loaded';\nimport Flickity from 'react-flickity-component'\nimport '../../lib_css/flickity.css'\nimport '../../lib_css/fullscreen.css'\nimport 'flickity-fullscreen'\n\n\nconst Projects = () => {\n    return (\n        <section id=\"projects\">\n            <div className=\"label\">\n                <small>Some of my</small>\n                <h1>Personal Projects</h1>\n            </div>\n            <ProjectDemo />\n        </section>\n    )\n}\n\nconst ProjectDemo = () => {\n    const [selectedProject, setSelectedProject] = useState(0)\n    const [imgsLoaded, setImgsLoaded] = useState(false)\n    const [perspective, setPerspective] = useState(\"rotateX(0deg) rotateY(0deg)\")\n    const sliderOptions = {\n        pageDots: false,\n        cellAlign: 'center',\n        contain: true,\n        wrapAround: true,\n        fullscreen: true,\n        prevNextButtons: false,\n        setGallerySize: false,\n        imagesLoaded: true,\n        lazyLoad: true,\n        groupCells: '50%'\n    }\n\n    useEffect(() => {\n        const loadImage = image => {\n            return new Promise((resolve, reject) => {\n                const loadImg = new Image()\n                loadImg.src = image\n                loadImage.key = image\n                // wait 2 seconds to simulate loading time\n                loadImg.onload = () =>\n                    resolve(image.url)\n                loadImg.onerror = err => reject(err)\n            })\n        }\n\n        Promise.all(data.projects[selectedProject].sample_ui.map((image, index) => {\n            // let length = data.images.length\n            // let currentIndex = index\n            // let p = ((index / length) * 100).toFixed(2)\n            loadImage(process.env.PUBLIC_URL + image)\n        }))\n            .then(() => {\n                setImgsLoaded(true)\n            })\n            .catch(err => console.log(\"Failed to load images\", err))\n    }, [selectedProject])\n    return (\n        <div className=\"demo\">\n            <div id=\"heads\" className='heads'>\n                {data.projects.map((e, i) => {\n                    return (<a href=\"#showcase\" onClick={async () => {\n                        setSelectedProject(i)\n                    }} className=\"head\">\n                        <div className=\"image\">\n                            <img src={process.env.PUBLIC_URL + e.cover_img} />\n                        </div>\n                    </a>)\n                })}\n            </div>\n            <div id=\"showcase\" className=\"project\">\n                <Flickity\n                    className=\"image\"\n                    elementType=\"div\"\n                    options={sliderOptions}\n                    reloadOnUpdate={true}\n                    key={data.projects[selectedProject].name}\n                >\n                    {data.projects[selectedProject].sample_ui.map((e, i) => <img key={`${data.projects[selectedProject].name}_${i}`} alt={data.projects[selectedProject].name} data-flickity-lazyload={process.env.PUBLIC_URL + e} src={process.env.PUBLIC_URL + \"/assets/images/loading.png\"} className=\"\" />)}\n                </Flickity>\n\n            </div>\n            <div className=\"selected\">\n                <div className=\"details\">\n                    <small style={{ borderBottomColor: `${data.projects[selectedProject].color}` }}>More about the project</small>\n                    <h1>{data.projects[selectedProject].name}</h1>\n                    <ul>\n                        {data.projects[selectedProject].stack.map(e => {\n                            return (\n                                <li style={{\n                                    border: `1px solid ${data.projects[selectedProject].color}`,\n                                    color: data.projects[selectedProject].color\n                                }}>{e}</li>\n                            )\n                        })}\n                    </ul>\n                    <p>{data.projects[selectedProject].description}</p>\n                    <div className=\"links\">\n                        <a\n                            style={{ color: data.projects[selectedProject].color, textDecoration: 'none', margin: data.projects[selectedProject].demo_video ? '' : 0 }}\n                            href={data.projects[selectedProject].git_url ?? '#showcase'}\n                            target={data.projects[selectedProject].git_url ?? '#'}\n                        >\n                            {data.projects[selectedProject].git_url ? 'Code' : ''}\n                        </a>\n                        <a\n                            style={{ color: data.projects[selectedProject].color, textDecoration: 'none', margin: data.projects[selectedProject].demo_video ? '' : 0 }}\n                            href={data.projects[selectedProject].demo_video ?? '#showcase'}\n                            target={data.projects[selectedProject].demo_video ?? '#'}\n                        >\n                            {data.projects[selectedProject].demo_video ? 'Demo' : ''}\n                        </a>\n                        <a\n                            style={{ color: data.projects[selectedProject].color, textDecoration: 'none', margin: data.projects[selectedProject].demo_video ? '' : 0 }}\n                            href={data.projects[selectedProject].demo_url ?? '#showcase'}\n                            target={data.projects[selectedProject].demo_url ?? '#'}\n                        >\n                            {data.projects[selectedProject].demo_url ? 'Live Demo' : ''}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Projects",["71","72"],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/contact/Contact.js",[],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/techstack/TechStack.js",[],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/events/attended/AttendedEvents.js",[],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/events/hosted/HostedEvents.js",[],"/home/camboobabbage/Documents/React Projects/portfolio_v3/src/components/organizations/Organizations.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":15},{"ruleId":"77","severity":1,"message":"81","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":1,"column":55,"nodeType":"79","messageId":"80","endLine":1,"endColumn":67},{"ruleId":"77","severity":1,"message":"83","line":1,"column":69,"nodeType":"79","messageId":"80","endLine":1,"endColumn":78},{"ruleId":"84","severity":1,"message":"85","line":17,"column":93,"nodeType":"86","endLine":17,"endColumn":108},{"ruleId":"84","severity":1,"message":"85","line":18,"column":62,"nodeType":"86","endLine":18,"endColumn":77},{"ruleId":"84","severity":1,"message":"85","line":19,"column":67,"nodeType":"86","endLine":19,"endColumn":82},{"ruleId":"84","severity":1,"message":"85","line":21,"column":87,"nodeType":"86","endLine":21,"endColumn":102},{"ruleId":"87","severity":1,"message":"88","line":40,"column":8,"nodeType":"89","endLine":40,"endColumn":18,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":46,"column":19,"nodeType":"93","messageId":"94","endLine":46,"endColumn":21},{"ruleId":"77","severity":1,"message":"95","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":16},{"ruleId":"77","severity":1,"message":"96","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"97","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"77","severity":1,"message":"98","line":25,"column":12,"nodeType":"79","messageId":"80","endLine":25,"endColumn":22},{"ruleId":"77","severity":1,"message":"99","line":26,"column":12,"nodeType":"79","messageId":"80","endLine":26,"endColumn":23},{"ruleId":"77","severity":1,"message":"100","line":26,"column":25,"nodeType":"79","messageId":"80","endLine":26,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":53,"column":81,"nodeType":"103","messageId":"104","endLine":53,"endColumn":83},{"ruleId":"105","severity":1,"message":"106","line":72,"column":29,"nodeType":"107","endLine":72,"endColumn":79},{"ruleId":"73","replacedBy":"108"},{"ruleId":"75","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'faGit' is defined but never used.","Identifier","unusedVar","'faGithub' is defined but never used.","'faLinkedinIn' is defined but never used.","'faTwitter' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeActive' and 'selectedIndex'. Either include them or remove the dependency array.","ArrayExpression",["112"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'ImagesLoaded' is defined but never used.","'imgsLoaded' is assigned a value but never used.","'perspective' is assigned a value but never used.","'setPerspective' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [changeActive, selected, selectedIndex]",{"range":"115","text":"116"},[937,947],"[changeActive, selected, selectedIndex]"]